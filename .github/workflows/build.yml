# This is a basic workflow to help you get started with Actions

name: Build-Font

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build font (Same as .azure-pipelines.yml)
  build:
    name: Build Font
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8
      
      - name: Install dependencies
        run: |
          sudo apt-get install -y ttfautohint
          pip install -r requirements.txt ufolint
          
      - name: Lint sources
        run: ufolint sources/*.ufo
      
      # TODO: Investigate need for static fonts
      - name: Build fonts
        # We don't care about the mono font
        run: python ./build.py -W -M -S
          
      - name: Upload font artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: RawFonts
          path: build/
  
  patch:
    # Based on: https://github.com/adam7/delugia-code/blob/master/.github/workflows/ci.yaml
    name: Patch fonts with NerdPatcher
    runs-on: ubuntu-latest
    needs: build
    env:
      NERDFONTVERS: v2.1.0

    steps:
      - name: Download font package
        uses: actions/download-artifact@v2.0.10
        with:
          name: RawFonts
          path: build/
          
#       - name: Download NerdFonts Docker container
#         run: docker pull cdalvaro/nerd-fonts-patcher:latest

      - name: Patch fonts
        run: |
          docker run --rm \
            --volume $(pwd)/build:/nerd-fonts/in:ro \
            --volume $(pwd)/patched:/nerd-fonts/out \
            --user $(id -u):$(id -g) \
            cdalvaro/nerd-fonts-patcher:2.1.0 \
            --quiet --no-progressbars \
            --mono --adjust-line-height --complete --careful
            
      - name: Upload patched font artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: PatchedFonts
          path: patched/

#       - name: Setup Python 3.8
#         uses: actions/setup-python@v2.2.2
#         with:
#           python-version: 3.8
#       - name: Install FontForge
#         run: |
#           sudo add-apt-repository ppa:fontforge/fontforge -y -u;
#           sudo apt-get install fontforge -y;
#       - name: Download and patch Font Patcher
#         run: |
#           curl -L https://raw.githubusercontent.com/ryanoasis/nerd-fonts/${NERDFONTVERS}/font-patcher --output font-patcher
#           patch font-patcher 0001*.patch

#       - name: Download font package
#         uses: actions/download-artifact@v2.0.10
#         with:
#           name: FontPackage
#           path: build/
#       - name: Extract additional powerline glyphs
#         run: fontforge -lang=ff -script extract-extra-glyphs

#       - name: Build Complete
#         run: |
#           ./do_generate 21 -c --mono CascadiaCodePL-Regular.ttf            DelugiaComplete.ttf              "Delugia"       "Regular"
#           ./do_generate 22 -c --mono CascadiaCodePL-Bold.ttf               DelugiaComplete-Bold.ttf         "Delugia"       "Bold"
#           ./do_generate 23 -c --mono CascadiaCodePL-Italic.ttf             DelugiaComplete-Italic.ttf       "Delugia"       "Italic"
#           ./do_generate 24 -c --mono CascadiaCodePL-BoldItalic.ttf         DelugiaComplete-BoldItalic.ttf   "Delugia"       "Bold Italic"
#           ./do_generate 25 -c --mono CascadiaCodePL-Light.ttf              DelugiaCompleteLight.ttf         "Delugia Light" ""
#           ./do_generate 26 -c --mono CascadiaCodePL-LightItalic.ttf        DelugiaCompleteLight-Italic.ttf  "Delugia Light" "Italic"
#           mkdir delugia-complete
#           mv Delugia*ttf delugia-complete
#           zip delugia-complete.zip delugia-complete/*
#
#       - uses: actions/upload-artifact@master
#         with:
#           name: Delugia Complete
#           path: "delugia-complete"
